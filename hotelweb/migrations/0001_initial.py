# Generated by Django 2.1.1 on 2019-03-02 20:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import hotelweb.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllOrdersListView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'AllOrdersListView',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArrivalView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ArrivalsView',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookingSummaryView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'BookingSummaryView',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CancellationView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'CancellationView',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CleaningFacilityView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'CleaningFacilityView',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CleaningRoomView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'cleaningRoomView',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DepartureView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'DeparturesView',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InhouseGuestView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'InhouseGuestsView',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LeastUsedFacilityView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'LeastUsedFacilityView',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MostUsedFacilityView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'MostUsedFacilityView',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OverBookingView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'OverBookingsView',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoomsOccupiedView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'RoomsOccupiedView',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TodayBookingView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'TodayBookingView',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=50)),
                ('id_number', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('Female', 'Female'), ('Male', 'Male')], max_length=100)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_client', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.IntegerField(default=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', hotelweb.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_message', models.TextField()),
                ('alert_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('alert_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AlertType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type_name', models.CharField(max_length=100)),
                ('alert_type_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('alert_type_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('booking_end_date', models.DateField(default=django.utils.timezone.now)),
                ('booking_confirmation_number', models.CharField(blank=True, max_length=100)),
                ('booking_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('booking_status', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_message', models.CharField(max_length=700, null=True)),
                ('chat_type', models.CharField(max_length=100)),
                ('chat_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('chat_recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_receiver', to=settings.AUTH_USER_MODEL)),
                ('chat_sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cleaning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cleaning_time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_has_baby', models.BooleanField(default=False)),
                ('client_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Commodity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commodity_name', models.CharField(max_length=100)),
                ('commodity_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('commodity_status', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='CommodityCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commodity_category_name', models.CharField(max_length=100)),
                ('commodity_category_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('commodity_category_status', models.IntegerField(default=1)),
                ('commodity_category_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommodityMetric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commodity_metric_name', models.CharField(max_length=100)),
                ('commodity_metric_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('commodity_metric_status', models.IntegerField(default=1)),
                ('commodity_metric_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommodityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commodity_type_name', models.CharField(max_length=100)),
                ('commodity_type_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('commodity_type_status', models.IntegerField(default=1)),
                ('commodity_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.CommodityCategory')),
                ('commodity_type_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DayMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_menu_quantity', models.IntegerField()),
                ('day_menu_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('day_menu_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DispatchStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dispatch_quantity', models.IntegerField()),
                ('dispatch_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('dispatch_commodity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.Commodity')),
                ('dispatch_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispatcher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=100)),
                ('event_start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('event_end_date', models.DateField(default=django.utils.timezone.now)),
                ('event_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('event_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type_name', models.CharField(max_length=100)),
                ('event_type_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('event_type_status', models.IntegerField(default=1)),
                ('event_type_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facility_floor', models.IntegerField()),
                ('facility_number', models.CharField(max_length=50)),
                ('facility_cleaning_status', models.IntegerField(default=1)),
                ('facility_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('facility_status', models.IntegerField(default=1)),
                ('facility_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FacilityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facility_type_name', models.CharField(max_length=100)),
                ('facility_type_status', models.IntegerField(default=1)),
                ('facility_type_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('facility_type_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel_name', models.CharField(max_length=100)),
                ('hotel_ranking', models.CharField(max_length=100)),
                ('hotel_location', models.CharField(max_length=100)),
                ('hotel_package', models.CharField(max_length=100)),
                ('hotel_created_on', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='JobShift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_shift', models.CharField(max_length=100)),
                ('shift_start_time', models.TimeField()),
                ('shift_end_time', models.TimeField()),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=100)),
                ('job_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('job_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Laundry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('laundry_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('laundry_status', models.IntegerField(default=0)),
                ('laundry_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='laundry_client', to=settings.AUTH_USER_MODEL)),
                ('laundry_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='laundry_staff', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LaundryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('laundry_cloth_quantity', models.IntegerField()),
                ('laundry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.Laundry')),
            ],
        ),
        migrations.CreateModel(
            name='LaundryType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('laundry_type_cloth', models.CharField(max_length=100)),
                ('laundry_type_cost', models.IntegerField()),
                ('laundry_type_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('laundry_type_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MealTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_time_name', models.CharField(max_length=100)),
                ('meal_time_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('meal_time_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_name', models.CharField(max_length=100)),
                ('meal_cost', models.IntegerField()),
                ('meal_image', models.ImageField(blank=True, null=True, upload_to='media/meal/')),
                ('meal_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('meal_status', models.IntegerField(default=1)),
                ('meal_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('meal_time', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.MealTime')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('order_order_status', models.IntegerField(default=0)),
                ('order_paid', models.BooleanField(default=False)),
                ('order_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_item_quantity', models.IntegerField(default=1)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.Order')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.DayMenu')),
            ],
        ),
        migrations.CreateModel(
            name='OtherFacility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facility_name', models.CharField(max_length=50)),
                ('facility_location', models.CharField(max_length=50)),
                ('facility_capacity', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(max_length=100)),
                ('package_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('package_status', models.IntegerField(default=1)),
                ('package_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Parking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parking_location', models.CharField(max_length=100)),
                ('parking_slot_number', models.CharField(max_length=100)),
                ('parking_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('parking_status', models.IntegerField(default=1)),
                ('parking_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('rating_comment', models.TextField(blank=True)),
                ('rating_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('rating_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_created_on', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='RequestType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_type_name', models.CharField(max_length=50)),
                ('request_type_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('request_type_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_facility', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.Facility')),
            ],
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_type_name', models.CharField(max_length=100)),
                ('room_type_status', models.IntegerField(default=1)),
                ('room_type_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('room_type_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_id', models.CharField(max_length=100)),
                ('staff_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_created_by', to=settings.AUTH_USER_MODEL)),
                ('staff_job_shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.JobShift')),
                ('staff_job_title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.JobTitle')),
                ('staff_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_full_name', models.CharField(max_length=100)),
                ('supplier_phone', models.CharField(max_length=100)),
                ('supplier_email', models.EmailField(max_length=100, unique=True)),
                ('supplier_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('supplier_status', models.IntegerField(default=1)),
                ('supplier_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SupplierType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_type_name', models.CharField(max_length=100)),
                ('supplier_type_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('supplier_type_status', models.IntegerField(default=1)),
                ('supplier_type_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supply_quantity', models.IntegerField()),
                ('supply_cost', models.IntegerField()),
                ('supply_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('supply_commodity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.Commodity')),
                ('supply_created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('supply_metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.CommodityMetric')),
                ('supply_supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.Supplier')),
            ],
        ),
        migrations.CreateModel(
            name='UserTrackingMovements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_tracking_status', models.CharField(max_length=100)),
                ('user_tracking_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('user_tracking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_tracking_facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.Facility')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_number_plate', models.CharField(max_length=100)),
                ('vehicle_created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('vehicle_parking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.Parking')),
                ('vehicle_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='supplier',
            name='supplier_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.SupplierType'),
        ),
        migrations.AddField(
            model_name='room',
            name='room_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.RoomType'),
        ),
        migrations.AddField(
            model_name='request',
            name='request_request_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.RequestType'),
        ),
        migrations.AddField(
            model_name='request',
            name='request_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='laundryitem',
            name='laundry_item_cloth',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.LaundryType'),
        ),
        migrations.AddField(
            model_name='facility',
            name='facility_type',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.FacilityType'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.EventType'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.Facility'),
        ),
        migrations.AddField(
            model_name='dispatchstock',
            name='dispatch_facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.Facility'),
        ),
        migrations.AddField(
            model_name='dispatchstock',
            name='dispatch_metric',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.CommodityMetric'),
        ),
        migrations.AddField(
            model_name='dispatchstock',
            name='dispatch_to_staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='daymenu',
            name='day_menu_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.Menu'),
        ),
        migrations.AddField(
            model_name='commodity',
            name='commodity_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.CommodityCategory'),
        ),
        migrations.AddField(
            model_name='commodity',
            name='commodity_created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commodity',
            name='commodity_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.CommodityType'),
        ),
        migrations.AddField(
            model_name='cleaning',
            name='cleaning_facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.Facility'),
        ),
        migrations.AddField(
            model_name='cleaning',
            name='cleaning_staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='booking',
            name='booking_facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.Facility'),
        ),
        migrations.AddField(
            model_name='booking',
            name='booking_package',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.Package'),
        ),
        migrations.AddField(
            model_name='booking',
            name='booking_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_client', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='alert',
            name='alert_title',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotelweb.AlertType'),
        ),
    ]
